mpg=function(litres,kilometres){#mpg=function(  arguments here){
miles=kilometres*5/8#mpg=
gallons=litres/4.55
mpg=miles/gallons
return(mpg) #return(mpg)
}
mpg(litres=8.3,kilometres=100)
roots=function(a,b,c){
discriminant=b^2-4*a*c
if(discriminant<0){
print("quadratic has no real roots")
return(NULL)}
roots=(-b+c(-1,1)*sqrt(discriminant))/(2*a)
return(roots)
}
roots(1,-3,2)
qt(.975,23)
set.seed(87612345)
data=rnorm(25,mean=4.5,sd=.75)
set.seed(87612345)
data=rnorm(25,mean=4.5,sd=.75)
t.test(data,conf.level=.99)
1+c(-1,1)*.25
tinterval=function(data,alpha=.05){
n=length(data)
t=qt(1-alpha/2,n-1)
xbar=mean(data)
s=sd(data)
tinterval=xbar+c(-1,1)*t*s/sqrt(n)
return(tinterval)
}
tinterval(data,.01)
newton_quotient=function(x,h=1e-6){
temp=(exp(x+h)-exp(x))/h
return(temp)
}
newton_quotient(1)
test=function(x,f){
output=f(x)+2
return(output)
}
test(0,exp)
test(1,log)
test(0,sin)
test(pi/2,sin)
newtonf=function(x,f,h=1e-6){
temp=(f(x+h)-f(x))/h
return(temp)
}
newtonf(pi/4,sin)
newtonf(2,log)
newtonf(1,exp)
set.seed(1128719)
data=matrix(rnorm(20),byrow=T,ncol=2)
set.seed(1128719)
data=matrix(rnorm(20),byrow=T,ncol=2)
data
sortf=function(x){
if(x[2]<x[1]){
x=c(x[2],x[1])
}
return(x)
}
fun2=function(x){
n=nrow(x)
for (i in 1:n){
x[i,]=sortf(x[i,])
}
return(x)
}
fun2(data)
roots=function(a,b,c){
d=b^2-4*a*c
if(d<0){
print("quadratic has no real roots")
return(NULL)
}
roots=(-b+c(-1,1)*sqrt(d))/(2*a)
return(roots)
}
roots(1,-3,2)
root=function(a,b,c){
d=b^2-4*a*c
if(d<0){
print("quadratic has no real roots")
return(NULL)
}
root=(-b+c(-1,1)*sqrt(d))/(2*a)
return(root)
}
root(1,-3,2)
t_interval=function(data,alpha=.05){
n=length(data)
t=qt(1-alpha/2,n-1)
xbar=mean(data)
s=sd(data)
tinterval=xbar+c(-1,1)*t*s/sqrt(n)
return(t_interval)
}
t_interval(data,.01)
t_interval=function(data,alpha=.05){
n=length(data)
t=qt(1-alpha/2,n-1)
xbar=mean(data)
s=sd(data)
t_interval=xbar+c(-1,1)*t*s/sqrt(n)
return(t_interval)
}
t_interval(data,.01)
newton_equation=function(x,h=1e-6){
temp=(exp(x+h)-exp(x))/h
return(temp)
}
newton_equation(1)
newtonf2=function(x,f,h=1e-6){
temp=(f(x+h)-f(x))/h
return(temp)
}
newtonf2(pi/4,sin)
newtonf2(2,log)
newtonf2(1,exp)
#h is the default value,
#and should be put in the last. Otherwise it doesn't know which one is default value.
newtonf2=function(x,f,h=1e-6){
temp=(f(x+h)-f(x))/h
return(temp)
}
newtonf2(pi/4,sin)
newtonf2(2,log)
newtonf2(1,exp)
sortf=function(x){
if(x[2]<x[1]){
x=c(x[2],x[1])
}
return(x)
}
softf2=function(x){
n=nrow(x)
for (i in 1:n){
x[i,]=sortf(x[i,])
}
return(x)
}
sortf2(data)
sortf=function(x){
if(x[2]<x[1]){
x=c(x[2],x[1])
}
return(x)
}
sortf2=function(x){
n=nrow(x)
for (i in 1:n){
x[i,]=sortf(x[i,])
}
return(x)
}
sortf2(data)
