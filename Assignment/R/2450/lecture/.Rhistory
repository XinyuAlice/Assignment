SquareNormAny = function(x){
temp=0
for (i in 1:length(x)){temp=temp+x[i]^2 }
return(temp)
}
data=c(4,1,-2,5)
SquareNormAny(data)
vec = 1:5
evenOdd = ifelse(vec %% 2 == 0, 'even', 'odd')
print(evenOdd)
x = c(0, -1)
ifelse(x == 0, sqrt(x), x)
x = c(0, -1)
ifelse(x == 0, sqrt(x), x)
x=c(T,T,F,F)
y=c(F,F,T,F)
M=cbind(x,y,!(x&y))
M
x=c(T,T,F,F)
y=c(T,F,T,F)
M=cbind(x,y,(x!|y!))
x=c(T,T,F,F)
y=c(T,F,T,F)
M=cbind(x,y,!(x&y))
M
x=c(T,T,F,F)
y=c(F,F,T,F)
M=cbind(x,y,!(x&y))
M
x=c(T,T,F,F)
y=c(T,F,T,F)
M=cbind(x,y,!(x&y))
M
means <- c(1, 50, 20)
out <- vector(mode='list', length(means))
for (i in 1:length(means)) {
out[[i]] <- 1:3 + means[[i]]
}
out
xs <- c(1, 2, 3)
for (x in xs) {
xs <- c(xs, x * 2)
print(xs)
}
xs
for (i in 1:3) {
if(i == 6) { print(i) }
i <- i * 2
}
for (i in 1:3) {
if(i == 6) { print(i) }
i <- i * 2
}
for (i in 1:3) {
if(i == 6) { print(i) }
i <- i * 2
}
for (i in 1:3) {
if(i == 6) { print(i) }
i <- i * 2
}
for (i in 1:3) {
if(i == 6) { print(i) }
i <- i * 2
}
for (i in 1:3) {
if(i == 6) { print(i) }
i <- i * 2
}
x <- 4:10
ifelse(x %% 5 == 0, 'XXX', as.character(x))
mtcars[mtcars$cyl= 4, ]
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
test=function(x){
a=10
return(c(a-x,a+x,a*x))
}
test(8)
x=0
while( x > -1){
x = x+1
}
print('done')
x=6
while( x < 7 ){
x = x-1
if(x == 0) break
}
print('done')
